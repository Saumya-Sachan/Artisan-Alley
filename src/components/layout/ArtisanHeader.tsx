// This is an autogenerated file from Firebase Studio.
"use client";

import Link from "next/link";
import { usePathname, useRouter } from "next/navigation";
import {
  LogOut,
  LayoutDashboard,
  ShoppingBag,
  Settings,
  BarChart3,
  Languages,
} from "lucide-react";
import { Button } from "@/components/ui/button";
import { ThemeToggle } from "@/components/ThemeToggle";
import { Avatar, AvatarFallback, AvatarImage } from "@/components/ui/avatar";
import { useAuth } from "@/hooks/use-auth";
import { useToast } from "@/hooks/use-toast";
import { LanguageSelector } from "../LanguageSelector";
import { useLanguage } from "@/hooks/use-language";
import { cn } from "@/lib/utils";
import {
  DropdownMenu,
  DropdownMenuContent,
  DropdownMenuItem,
  DropdownMenuLabel,
  DropdownMenuSeparator,
  DropdownMenuTrigger,
} from "@/components/ui/dropdown-menu";

export function ArtisanHeader() {
  const { user, logout } = useAuth();
  const { translate } = useLanguage();
  const { toast } = useToast();
  const router = useRouter();
  const pathname = usePathname();
  const userName = user?.name || "Anonymous";

  const handleLogout = () => {
    logout();
    toast({
      title: translate("Logged Out"),
      description: translate("You have been successfully logged out."),
    });
    router.push("/");
  };

  const navItems = [
    {
      href: "/dashboard",
      label: translate("Dashboard"),
      icon: <LayoutDashboard />,
    },
    {
      href: "/dashboard/products",
      label: translate("Products"),
      icon: <ShoppingBag />,
    },
    {
      href: "/dashboard/analytics",
      label: translate("Analytics"),
      icon: <BarChart3 />,
    },
    {
      href: "/dashboard/settings",
      label: translate("Settings"),
      icon: <Settings />,
    },
  ];

  return (
    <header className="sticky top-0 z-30 w-full border-b bg-background/80 backdrop-blur-sm">
      <div className="container mx-auto flex h-16 items-center px-4 md:px-6">
        <Link
          href="/dashboard"
          className="mr-6 flex items-center gap-2 font-headline text-lg font-bold"
        >
          <svg
            xmlns="http://www.w3.org/2000/svg"
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            strokeWidth="2"
            strokeLinecap="round"
            strokeLinejoin="round"
            className="h-6 w-6 text-primary"
          >
            <path d="M12 2l-8 8.5 4.5 5L4 22h16l-4.5-6.5 4.5-5L12 2z" />
            <path d="M12 2v20" />
          </svg>
          Artisan Alley
        </Link>

        <nav className="hidden items-center gap-6 text-sm font-medium md:flex">
          {navItems.map(({ href, label }) => {
            const isActive = (href === '/dashboard' && pathname === href) || (href !== '/dashboard' && pathname.startsWith(href));
            return (
              <Link
                key={href}
                href={href}
                className={cn(
                  "transition-colors hover:text-primary",
                  isActive
                    ? "text-primary font-semibold"
                    : "text-muted-foreground"
                )}
              >
                {label}
              </Link>
            )
          })}
        </nav>

        <div className="ml-auto flex items-center gap-2">
           <DropdownMenu>
              <DropdownMenuTrigger asChild>
                 <Button variant="ghost" size="icon">
                    <Languages className="h-5 w-5" />
                    <span className="sr-only">Languages</span>
                </Button>
              </DropdownMenuTrigger>
              <DropdownMenuContent align="end">
                <LanguageSelector />
              </DropdownMenuContent>
            </DropdownMenu>
          <ThemeToggle />
          <Button onClick={handleLogout} variant="ghost" size="icon">
            <LogOut />
            <span className="sr-only">{translate("Logout")}</span>
          </Button>
        </div>
      </div>
    </header>
  );
}
