// This is an autogenerated file from Firebase Studio.
"use client";

import Image from "next/image";
import { Button } from "@/components/ui/button";
import { Card, CardContent } from "@/components/ui/card";
import { Camera, Heart, MessageCircle } from "lucide-react";
import { getProduct, getArtisan } from "@/lib/data";
import { PlaceHolderImages } from "@/lib/placeholder-images";
import { communityPosts } from "@/lib/community-data";
import { useState, useEffect } from "react";
import { generateUgcCaption, type UgcCaptionInput } from "@/ai/flows/generate-ugc-caption";
import { useLanguage } from "@/hooks/use-language";

function UgcPostCard({ post }: { post: any }) {
  const { translate, language } = useLanguage();
  const product = getProduct(post.productId);
  const artisan = product ? getArtisan(product.artisanId) : null;
  const image = PlaceHolderImages.find((img) => img.id === post.imageId);

  const [caption, setCaption] = useState(translate("Loading caption..."));

  useEffect(() => {
    async function getCaption() {
      if (product && artisan) {
        try {
          const { caption } = await generateUgcCaption({
            productName: product.name,
            category: product.category,
            region: product.region,
            language: language,
          });
          setCaption(caption);
        } catch (error) {
          console.error("Failed to generate caption:", error);
          setCaption(translate("A beautiful moment with a handcrafted treasure.")); // Fallback caption
        }
      }
    }
    getCaption();
  }, [product, artisan, language]);

  return (
    <Card className="overflow-hidden">
      {image && (
        <div className="relative aspect-[4/5] w-full">
          <Image
            src={image.imageUrl}
            alt={`Post by ${post.userName}`}
            fill
            className="object-cover"
            data-ai-hint={image.imageHint}
          />
        </div>
      )}
      <CardContent className="p-4">
        <p className="text-sm">
          <strong>{post.userName}</strong> {caption}
        </p>
        <div className="mt-4 flex items-center justify-between text-muted-foreground">
           <div className="flex gap-4">
                <button className="flex items-center gap-1.5 text-sm hover:text-primary">
                    <Heart className="h-4 w-4" /> {post.likes}
                </button>
                <button className="flex items-center gap-1.5 text-sm hover:text-primary">
                    <MessageCircle className="h-4 w-4" /> {post.comments}
                </button>
           </div>
           <p className="text-xs">{post.timeAgo}</p>
        </div>
      </CardContent>
    </Card>
  );
}


export default function CommunityPage() {
  const { translate } = useLanguage();
  const bannerImage = PlaceHolderImages.find(img => img.id === 'hero-background');

  return (
    <div>
        <section className="relative h-64 w-full">
            {bannerImage && (
                <Image
                    src={bannerImage.imageUrl}
                    alt="Artisan workshop"
                    fill
                    className="object-cover"
                    data-ai-hint={bannerImage.imageHint}
                />
            )}
            <div className="absolute inset-0 bg-black/50" />
            <div className="relative z-10 flex h-full flex-col items-center justify-center text-center text-white">
                <h1 className="font-headline text-4xl font-bold md:text-6xl">
                    {translate('From Our Community')}
                </h1>
                <p className="mt-4 max-w-2xl text-lg text-primary-foreground/90 dark:text-white/90">
                    {translate('See how our handcrafted treasures are woven into the lives of our customers.')}
                </p>
                <Button className="mt-8">
                    <Camera className="mr-2 h-4 w-4"/>
                    {translate('Share Your Story')}
                </Button>
            </div>
        </section>

        <main className="container mx-auto px-4 py-12 md:px-6">
            <div className="grid grid-cols-1 gap-4 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4">
                {communityPosts.map(post => (
                    <UgcPostCard key={post.id} post={post} />
                ))}
            </div>
        </main>
    </div>
  );
}
