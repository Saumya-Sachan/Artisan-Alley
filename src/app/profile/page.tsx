// This is an autogenerated file from Firebase Studio.
"use client";

import { Button } from "@/components/ui/button";
import { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from "@/components/ui/card";
import { Separator } from "@/components/ui/separator";
import { Avatar, AvatarFallback, AvatarImage } from "@/components/ui/avatar";
import { ChevronRight, User, Settings, Mail, LogOut, Trash2, Shield, Repeat } from "lucide-react";
import {
  AlertDialog,
  AlertDialogAction,
  AlertDialogCancel,
  AlertDialogContent,
  AlertDialogDescription,
  AlertDialogFooter,
  AlertDialogHeader,
  AlertDialogTitle,
  AlertDialogTrigger,
} from "@/components/ui/alert-dialog";
import { useToast } from "@/hooks/use-toast";
import Link from "next/link";
import { useAuth } from "@/hooks/use-auth";
import { useRouter } from "next/navigation";
import { useEffect } from "react";
import { useLanguage } from "@/hooks/use-language";


export default function ProfilePage() {
    const { toast } = useToast();
    const { user, logout, isLoggedIn, setRole } = useAuth();
    const router = useRouter();
    const { translate } = useLanguage();

    useEffect(() => {
        if (!isLoggedIn) {
            router.push('/');
        }
    }, [isLoggedIn, router]);

    const handleLogout = () => {
        logout();
        toast({
            title: translate("Logged Out"),
            description: translate("You have been successfully logged out."),
        });
    };
    
    const handleDeleteAccount = () => {
        logout(); // Simulate account deletion by logging out
        toast({
            variant: "destructive",
            title: translate("Account Deleted"),
            description: translate("Your account has been permanently deleted."),
        });
    }

    const toggleView = () => {
        if (user) {
            const newRole = user.role === 'customer' ? 'artisan' : 'customer';
            setRole(newRole);
            if (newRole === 'artisan') {
                router.push('/dashboard');
            } else {
                router.push('/');
            }
        }
    }

    if (!user) {
        return null;
    }

  return (
    <div className="container mx-auto max-w-2xl px-4 py-8 md:px-6">
        <header className="mb-8 flex items-center gap-6">
            <Avatar className="h-24 w-24">
                <AvatarImage src={user.avatar} alt={user.name} />
                <AvatarFallback>{user.name.charAt(0).toUpperCase()}</AvatarFallback>
            </Avatar>
            <div>
                <h1 className="font-headline text-3xl font-bold">{user.name}</h1>
                <p className="text-muted-foreground">{user.email}</p>
                <Badge variant="outline" className="mt-2">{translate(user.role)}</Badge>
            </div>
        </header>

        <Card>
            <CardContent className="p-0">
                 <ul className="divide-y">
                    <MenuItem href="/profile/settings" icon={<User />} label={translate("Profile Settings")} />
                    <MenuItem href="/profile/account" icon={<Settings />} label={translate("Account Settings")} />
                    <MenuItem href="/about" icon={<Shield />} label={translate("About Us")} />
                    <li>
                        <button onClick={toggleView} className="w-full">
                           <div className="flex items-center p-4 hover:bg-secondary transition-colors">
                                <Repeat className="mr-4 h-5 w-5 text-primary" />
                                <span className="flex-grow text-left font-medium">{translate('Switch to')} {translate(user.role === 'customer' ? 'Artisan' : 'Customer')} {translate('View')}</span>
                                <ChevronRight className="h-5 w-5 text-muted-foreground" />
                            </div>
                        </button>
                    </li>
                    <MenuItem href="mailto:artisan.ai@ac.in" icon={<Mail />} label={translate("Contact")} />
                 </ul>
            </CardContent>
        </Card>

        <Card className="mt-8">
            <CardContent className="p-0">
                 <ul className="divide-y">
                     <li>
                        <button onClick={handleLogout} className="w-full">
                           <div className="flex items-center p-4 hover:bg-secondary transition-colors rounded-t-lg">
                                <LogOut className="mr-4 h-5 w-5 text-primary" />
                                <span className="flex-grow text-left font-medium">{translate('Logout')}</span>
                            </div>
                        </button>
                    </li>
                    <li>
                         <AlertDialog>
                            <AlertDialogTrigger asChild>
                                <button className="w-full text-destructive">
                                    <div className="flex items-center p-4 hover:bg-destructive/10 transition-colors rounded-b-lg">
                                        <Trash2 className="mr-4 h-5 w-5" />
                                        <span className="flex-grow text-left font-medium">{translate('Delete My Account')}</span>
                                    </div>
                                </button>
                            </AlertDialogTrigger>
                            <AlertDialogContent>
                                <AlertDialogHeader>
                                <AlertDialogTitle>{translate('Are you absolutely sure?')}</AlertDialogTitle>
                                <AlertDialogDescription>
                                    {translate('This action cannot be undone. This will permanently delete your account and remove your data from our servers.')}
                                </AlertDialogDescription>
                                </AlertDialogHeader>
                                <AlertDialogFooter>
                                <AlertDialogCancel>{translate('Cancel')}</AlertDialogCancel>
                                <AlertDialogAction onClick={handleDeleteAccount} className="bg-destructive hover:bg-destructive/90">
                                    {translate('Delete')}
                                </AlertDialogAction>
                                </AlertDialogFooter>
                            </AlertDialogContent>
                        </AlertDialog>
                    </li>
                 </ul>
            </CardContent>
        </Card>
    </div>
  );
}

function MenuItem({ href, icon, label }: { href: string, icon: React.ReactNode, label: string }) {
  return (
    <li>
        <Link href={href}>
            <div className="flex items-center p-4 hover:bg-secondary transition-colors first:rounded-t-lg last:rounded-b-lg">
                <div className="text-primary">{icon}</div>
                <span className="flex-grow px-4 font-medium">{label}</span>
                <ChevronRight className="h-5 w-5 text-muted-foreground" />
            </div>
        </Link>
    </li>
  );
}

import { Badge } from "@/components/ui/badge";
